upstream odoo {
        server 127.0.0.1:8069 weight=1 fail_timeout=0;
}
upstream odoo-im {
        server 127.0.0.1:8072 weight=1 fail_timeout=0;
}
{% for web in webs %}




##############################
# Web server configuration for {{ web.url }}

server {
        if ($host = {{ web.domain }}) {
                return 301 https://$host$request_uri;
            }

        listen 80;
        server_name {{ web.domain }};
        # Strict Transport Security
        add_header Strict-Transport-Security max-age=2592000;
        rewrite ^/.*$ https://$host$request_uri? permanent;
        allow 127.0.0.0/8;
}

server {
        listen 443 ssl;
        server_name {{ web.domain }};

        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 200m;

        # add ssl specific settings
        keepalive_timeout 60;
        ssl_certificate /etc/letsencrypt/live/{{ web.domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ web.domain }}/privkey.pem;

        # limit ciphers
        ssl_ciphers HIGH:!ADH:!MD5;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # increase proxy buffer to handle some OpenERP web requests
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;

        #general proxy settings
        # force timeouts if the backend dies
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

        # Let the OpenERP web service know that we’re using HTTPS, otherwise
        # it will generate URL using http:// and not https://
        proxy_set_header X-Forwarded-Proto https;

        # by default, do not forward anything
        proxy_redirect off;
        proxy_buffering off;
        location / {
                proxy_pass http://odoo;
        }

        location /longpolling {
                proxy_pass http://odoo-im;
        }

        # cache some static data in memory for 60mins.
        location /web/static/ {
                proxy_cache_valid 200 60m;
                proxy_buffering on;
                expires 864000;
                proxy_pass http://odoo;
        }

        location ~ /.well-known {
                allow all;
                root /var/www/html/;
        }
}

server {
        listen 443 ssl;
        server_name {{ web.hostname }};

        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 200m;

        # add ssl specific settings
        keepalive_timeout 60;
        ssl_certificate /etc/letsencrypt/live/{{ web.hostname }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ web.hostname }}/privkey.pem;

        # limit ciphers
        ssl_ciphers HIGH:!ADH:!MD5;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # increase proxy buffer to handle some OpenERP web requests
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;

        #general proxy settings
        # force timeouts if the backend dies
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

        # Let the OpenERP web service know that we’re using HTTPS, otherwise
        # it will generate URL using http:// and not https://
        proxy_set_header X-Forwarded-Proto https;

        # by default, do not forward anything
        proxy_redirect off;
        proxy_buffering off;
        location / {
                proxy_pass http://odoo;
        }

        location /shopinvader/ {
            		proxy_hide_header Access-Control-Allow-Origin; # If this is not here it requests give erros of duplicate headers
            		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            		proxy_set_header X-Forwarded-Proto $scheme;
            		proxy_set_header X-Real-IP $remote_addr;
            		proxy_set_header Host $http_host;          
                if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        #
                        # Om nom nom cookies
                        #
                        add_header 'Access-Control-Allow-Credentials' 'true';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                        #
                        # Custom headers and headers various browsers *should* be OK with but aren't
                        #
                        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,API-KEY,WEBSITE-UNIQUE-KEY,PARTNER-EMAIL,SESS-CART-ID' always;
                        #
                        # Tell client that this pre-flight info is valid for 20 days
                        #
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain charset=UTF-8';
                        add_header 'Content-Length' 0;
                        return 204;
                     }
                     if ($request_method = 'GET') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Credentials' 'true';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,API-KEY,WEBSITE-UNIQUE-KEY,PARTNER-EMAIL,SESS-CART-ID';
                     }
                     if ($request_method = 'POST') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Credentials' 'true';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,API-KEY,WEBSITE-UNIQUE-KEY,PARTNER-EMAIL,SESS-CART-ID';
                     }
                     proxy_pass http://odoo/shopinvader/;
        }

        location /longpolling {
                proxy_pass http://odoo-im;
        }

        # cache some static data in memory for 60mins.
        location /web/static/ {
                proxy_cache_valid 200 60m;
                proxy_buffering on;
                expires 864000;
                proxy_pass http://odoo;
        }

        location ~ /.well-known {
                allow all;
                root /var/www/html/;
        }

}

{% endfor %}
